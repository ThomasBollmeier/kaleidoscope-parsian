(*
Grammar of Kaleidoscope langage
Author: Thomas Bollmeier <developer@tbollmeier.org>
Version: 0.2.0
*)

comment "#" "\n";

-- Terminals

symbol SEMICOLON ';';
symbol MULT '*';
symbol PLUS '+';
symbol LPAR '(';
symbol RPAR ')';

token NUMBER /\d+(\.\d+)?/;
token IDENT /[a-zA-Z][a-zA-Z0-9]*/;
token UNKNOWN /./;

-- Rules

@root
kaleidoscope -> ((stmt#definition | stmt#external | stmt#expr) SEMICOLON?)* =>
{
    :name "kaleidoscope"
    :children #stmt
};

expr -> mult_expr | primary_expr  => child;

primary_expr -> NUMBER | id_expr | paren_expr => child;

id_expr -> IDENT (LPAR arg#expr* RPAR)? => {
    :name "identifier"
    :text child.text
    :children #arg
};

paren_expr -> LPAR e#expr RPAR => {
    :name "group"
    :children [#e]
};

mult_expr -> primary_expr (operator primary_expr)+;

operator -> PLUS | MULT => {
    :name "operator"
    :text child.text
};

definition -> 'def' p#prototype e#expr =>
{
    :name "definition"
    :children [#p #e]
};

prototype -> func#IDENT LPAR arg#IDENT* RPAR;

external -> 'extern' p#prototype =>
{
    :name "external"
    :children #p
};
