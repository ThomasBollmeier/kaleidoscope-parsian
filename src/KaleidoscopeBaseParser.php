<?php
/* This file has been generated by the Parsian parser generator 
 * (see http://github.com/thomasbollmeier/parsian)
 * 
 * DO NOT EDIT THIS FILE!
 */
namespace tbollmeier\kaleidoscope;

use tbollmeier\parsian as parsian;


class KaleidoscopeBaseParser extends parsian\Parser
{
    public function __construct()
    {
        parent::__construct();

        $this->configLexer();
        $this->configGrammar();
    }

    private function configLexer()
    {

        $lexer = $this->getLexer();

        $lexer->addCommentType("#", "\n");



        $lexer->addTerminal("/\d+(\.\d+)?/", "NUMBER");
        $lexer->addTerminal("/[a-zA-Z][a-zA-Z0-9]*/", "IDENT");
        $lexer->addTerminal("/.+/", "UNKNOWN");


    }

    private function configGrammar()
    {

        $grammar = $this->getGrammar();

        $grammar->rule("kaleidoscope",
            $this->alt_1(),
            true);

    }

    private function alt_1()
    {
        $grammar = $this->getGrammar();

        return $grammar->alt()
            ->add($grammar->term("NUMBER"))
            ->add($grammar->term("ID"));
    }



}
